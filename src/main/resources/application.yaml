server:
  port: 80
  address: 0.0.0.0

spring:
  profiles:
    active: bak

  thymeleaf:
    cache: false  # 禁用 Thymeleaf 缓存，适合开发环境

  # 数据源配置
  datasource:
    name: ${datasource.name}
    driverClassName: ${datasource.driverClassName}
    url: ${datasource.url}
    username: ${datasource.username}
    password: ${datasource.password}
    # 使用 HikariCP 连接池配置
    hikari:
      minimum-idle: 5  # 最小空闲连接数
      maximum-pool-size: 15  # 最大连接池大小
      auto-commit: true  # 自动提交事务
      idle-timeout: 30000  # 空闲连接超时，单位毫秒
      pool-name: hikariCP  # 连接池名称
      max-lifetime: 30000  # 连接最大生命周期，单位毫秒
      connection-timeout: 30000  # 连接超时，单位毫秒
      connection-test-query: SELECT 1  # 测试连接是否有效的查询语句


  # Spring AI 配置
  ai:
    # 模型配置
    openai:
      api-key: ${ai.deepseek.api-key}  # OpenAI API 密钥
      base-url: ${ai.deepseek.url}  # OpenAI API 基础 URL
      model: ${ai.deepseek.model}  # 使用的 AI 模型

    # 向量数据库配置
    vectorstore:
      redis:
        index: ${vectorstore.redis.index}  # 向量数据库的索引名称
        uri: ${vectorstore.redis.url}  # Redis 地址
        prefix: ${vectorstore.redis.prefix}  # Redis 键的前缀

  # Redis 配置
  data:
    redis:
      host: ${redis.host}  # Redis 主机地址
      port: ${redis.port}  # Redis 端口号
      password: ${redis.password}  # Redis 密码
      database: ${redis.database}  # Redis 数据库索引

# Bailian API 配置
bailian:
  api-key: ${bailian.api-key}  # Bailian API 密钥
  baseUrl: ${bailian.baseUrl}  # Bailian API 基础 URL
  vector-model: ${bailian.vector-model}  # Bailian 向量模型
  dimensions: ${bailian.dimensions}  # Bailian 向量维度


  # MyBatis 配置
mybatis:
  mapper-locations: classpath:mapper/*Mapper.xml  # MyBatis 映射文件位置

# 应用基本 URL 配置
app:
  baseUrl: http://localhost:80  # 设置应用的基础 URL
